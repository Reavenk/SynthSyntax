// Given multiple constructors, choose the correct one based
// on the parameter pattern.
// 
// >> Name: "Struct Destructor"
// >> Results : {10, 20, 123}
// 


extern void LogTest(int loggedVal);
extern void EndTest();

struct TestStruct
{
	int a;
	int b;
	float c;
	int8 d;
	
	TestStruct(int v)
	{
		// Implicit this dereference
		a = v;
		b = v * 2;
		c = 3.3f;
		d = 123;
	}
	
	~TestStruct()
	{
		LogTest(a);
		LogTest(b);
		//LogTest(this.c);
		LogTest(this.d);
	}
}

entry DoTest()
{	
	TestStruct ts = TestStruct(10);
	
	// ts destructor expected here.
}